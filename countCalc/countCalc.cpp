// countCalc.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <iostream>
using namespace std;
int countCalc(char* str);
int parseCalc(char* str);
int main()
{
    char* stroka = new char[100];
    cin >> stroka;
    char* nStroka = new char[strlen(stroka + 1)];
    for (int i = 0; i < strlen(stroka); i++) {
        nStroka[i] = stroka[i];
    }
    nStroka[strlen(stroka)] = '\0';
    delete[]stroka;
    cout << nStroka << endl;
    cout << countCalc(nStroka) << endl;
}

int parseCalc(char* str) {
    int k = 0;
    for (int i = 0; i < strlen(str); i++) {
        if (str[i] == '*' || str[i] == '/') {
            k++;
        }
    }
    for (int i = 0; i < k; i++) { 
    }
    for (int i = 0; i < strlen(str); i++) {
        if (str[i] == '*') {

        }
    }
}

int countCalc(char* str) { // Функция убирания скобок, в нее нужно передать функцию рассчета строки
    // Это счетчик чтобы понять сколько раз проходить по строке
    int k = 0;
    for (int i = 0; i < strlen(str); i++) {
        if (str[i] == '(') {
            k++;
        }
    }
    // идем по строке и ищем открывающую скобу, если находим, то начинаем искать
    // закрывающую скобку, если находим то покачто просто печатаем то что между скобок,
    // если по пути попадается снова открывающая скобка то перекидываем индекс на нее
    // и снова идем дальше снова ищем закрывающуюу скобку.
    // Так проходиться нужно будет столько раз сколько у нас пар скобок
    for (int i = 0; i < strlen(str); i++) {
        if (str[i] == '(') {
            for (int j = i + 1; j < strlen(str); j++) {
                if (str[j] == ')') {
                    for (int l = i + 1; l < j; l++) {
                        cout << str[l] << " ";
                    }
                    cout << endl;
                    break;
                }
                if (str[j] == '(') {
                    i = j - 1;
                    break;
                }
            }          
        }
    }

    return k;
}

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
